{"ast":null,"code":"var _jsxFileName = \"/home/innodeed/samanth/react/uploader/src/components/UploadProgress/UploadProgress.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { size, toArray } from \"lodash\";\nimport { uploadFile } from \"../../redux/uploadFile/uploadFile.actions\";\nimport UploadItem from \"../UploadItem/UploadItem\";\nimport Styles from \"./UploadProgress.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UploadProgress = props => {\n  _s();\n\n  const {\n    fileProgress,\n    uploadFile\n  } = props;\n  const uploadedFileAmount = size(fileProgress);\n  useEffect(() => {\n    const fileToUpload = toArray(fileProgress).filter(file => file.progress === 0);\n    uploadFile(fileToUpload);\n  }, [uploadedFileAmount]);\n  return uploadedFileAmount > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Uploading File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), size(fileProgress) ? toArray(fileProgress).map(file => /*#__PURE__*/_jsxDEV(UploadItem, {\n      file: file\n    }, file.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this) : null;\n};\n\n_s(UploadProgress, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UploadProgress;\n\nconst mapStateToProps = state => (console.log(state, 'state'), {\n  fileProgress: state.fileProgress\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: files => dispatch(uploadFile(files))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadProgress);\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadProgress\");","map":{"version":3,"sources":["/home/innodeed/samanth/react/uploader/src/components/UploadProgress/UploadProgress.js"],"names":["React","useEffect","connect","size","toArray","uploadFile","UploadItem","Styles","UploadProgress","props","fileProgress","uploadedFileAmount","fileToUpload","filter","file","progress","wrapper","map","id","mapStateToProps","state","console","log","mapDispatchToProps","dispatch","files"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,QAA9B;AAEA,SAASC,UAAT,QAA2B,2CAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM;AAAEC,IAAAA,YAAF;AAAgBL,IAAAA;AAAhB,MAA+BI,KAArC;AACA,QAAME,kBAAkB,GAAGR,IAAI,CAACO,YAAD,CAA/B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,YAAY,GAAGR,OAAO,CAACM,YAAD,CAAP,CAAsBG,MAAtB,CAClBC,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkB,CADT,CAArB;AAGAV,IAAAA,UAAU,CAACO,YAAD,CAAV;AACD,GALQ,EAKN,CAACD,kBAAD,CALM,CAAT;AAOA,SAAOA,kBAAkB,GAAG,CAArB,gBACL;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACS,OAAvB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGb,IAAI,CAACO,YAAD,CAAJ,GACGN,OAAO,CAACM,YAAD,CAAP,CAAsBO,GAAtB,CAA2BH,IAAD,iBACxB,QAAC,UAAD;AAA0B,MAAA,IAAI,EAAEA;AAAhC,OAAiBA,IAAI,CAACI,EAAtB;AAAA;AAAA;AAAA;AAAA,YADF,CADH,GAIG,IANN;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,GASH,IATJ;AAUD,CArBD;;GAAMV,c;;KAAAA,c;;AAuBN,MAAMW,eAAe,GAAIC,KAAD,KAAYC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAkB,OAAlB,GAA2B;AAC7DV,EAAAA,YAAY,EAAEU,KAAK,CAACV;AADyC,CAAvC,CAAxB;;AAIA,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,UAAU,EAAGoB,KAAD,IAAWD,QAAQ,CAACnB,UAAU,CAACoB,KAAD,CAAX;AADS,CAAf,CAA3B;;AAIA,eAAevB,OAAO,CAACiB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cf,cAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { size, toArray } from \"lodash\";\n\nimport { uploadFile } from \"../../redux/uploadFile/uploadFile.actions\";\nimport UploadItem from \"../UploadItem/UploadItem\";\nimport Styles from \"./UploadProgress.module.css\";\n\nconst UploadProgress = (props) => {\n  const { fileProgress, uploadFile } = props;\n  const uploadedFileAmount = size(fileProgress);\n\n  useEffect(() => {\n    const fileToUpload = toArray(fileProgress).filter(\n      (file) => file.progress === 0\n    );\n    uploadFile(fileToUpload);\n  }, [uploadedFileAmount]);\n\n  return uploadedFileAmount > 0 ? (\n    <div className={Styles.wrapper}>\n      <h4>Uploading File</h4>\n      {size(fileProgress)\n        ? toArray(fileProgress).map((file) => (\n            <UploadItem key={file.id} file={file} />\n          ))\n        : null}\n    </div>\n  ) : null;\n};\n\nconst mapStateToProps = (state) => (console.log(state,'state'),{\n  fileProgress: state.fileProgress,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  uploadFile: (files) => dispatch(uploadFile(files)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadProgress);\n"]},"metadata":{},"sourceType":"module"}