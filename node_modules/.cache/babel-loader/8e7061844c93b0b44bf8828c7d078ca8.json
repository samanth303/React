{"ast":null,"code":"import uploadFileTypes from './uploadFile.types';\nimport { modifyFiles } from './uploadFile.utils';\nconst INITIAL_STATE = {\n  fileProgress: {// format will be like below\n    // 1: {\n    //   id: 1,\n    //   file,\n    //   progress: 0,\n    //   cancelSource: source,\n    //   status: 0,\n    // },\n  }\n};\n\nconst fileProgressReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case uploadFileTypes.SET_UPLOAD_FILE:\n      return { ...state,\n        fileProgress: { ...state.fileProgress,\n          ...modifyFiles(state.fileProgress, action.payload)\n        }\n      };\n\n    case uploadFileTypes.SET_UPLOAD_PROGRESS:\n      return { ...state,\n        fileProgress: { ...state.fileProgress,\n          [action.payload.id]: { ...state.fileProgress[action.payload.id],\n            progress: action.payload.progress\n          }\n        }\n      };\n\n    case uploadFileTypes.SUCCESS_UPLOAD_FILE:\n      return { ...state,\n        fileProgress: { ...state.fileProgress,\n          [action.payload]: { ...state.fileProgress[action.payload],\n            status: 1\n          }\n        }\n      };\n\n    case uploadFileTypes.FAILURE_UPLOAD_FILE:\n      return { ...state,\n        fileProgress: { ...state.fileProgress,\n          [action.payload]: { ...state.fileProgress[action.payload],\n            status: 0,\n            progress: 0\n          }\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default fileProgressReducer;","map":{"version":3,"sources":["/home/innodeed/samanth/react/uploader/src/redux/uploadFile/uploadFileReducer.js"],"names":["uploadFileTypes","modifyFiles","INITIAL_STATE","fileProgress","fileProgressReducer","state","action","type","SET_UPLOAD_FILE","payload","SET_UPLOAD_PROGRESS","id","progress","SUCCESS_UPLOAD_FILE","status","FAILURE_UPLOAD_FILE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,oBAA5B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,YAAY,EAAE,CAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATY;AADM,CAAtB;;AAcA,MAAMC,mBAAmB,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BH,aAA0B;AAAA,MAAXI,MAAW;;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,eAAe,CAACQ,eAArB;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,YAAY,EAAE,EACZ,GAAGE,KAAK,CAACF,YADG;AAEZ,aAAGF,WAAW,CAACI,KAAK,CAACF,YAAP,EAAqBG,MAAM,CAACG,OAA5B;AAFF;AAFT,OAAP;;AAQF,SAAKT,eAAe,CAACU,mBAArB;AACE,aAAO,EACL,GAAGL,KADE;AAELF,QAAAA,YAAY,EAAE,EACZ,GAAGE,KAAK,CAACF,YADG;AAEZ,WAACG,MAAM,CAACG,OAAP,CAAeE,EAAhB,GAAqB,EACnB,GAAGN,KAAK,CAACF,YAAN,CAAmBG,MAAM,CAACG,OAAP,CAAeE,EAAlC,CADgB;AAEnBC,YAAAA,QAAQ,EAAEN,MAAM,CAACG,OAAP,CAAeG;AAFN;AAFT;AAFT,OAAP;;AAWF,SAAKZ,eAAe,CAACa,mBAArB;AACE,aAAO,EACL,GAAGR,KADE;AAELF,QAAAA,YAAY,EAAE,EACZ,GAAGE,KAAK,CAACF,YADG;AAEZ,WAACG,MAAM,CAACG,OAAR,GAAkB,EAChB,GAAGJ,KAAK,CAACF,YAAN,CAAmBG,MAAM,CAACG,OAA1B,CADa;AAEhBK,YAAAA,MAAM,EAAE;AAFQ;AAFN;AAFT,OAAP;;AAWF,SAAKd,eAAe,CAACe,mBAArB;AACE,aAAO,EACL,GAAGV,KADE;AAELF,QAAAA,YAAY,EAAE,EACZ,GAAGE,KAAK,CAACF,YADG;AAEZ,WAACG,MAAM,CAACG,OAAR,GAAkB,EAChB,GAAGJ,KAAK,CAACF,YAAN,CAAmBG,MAAM,CAACG,OAA1B,CADa;AAEhBK,YAAAA,MAAM,EAAE,CAFQ;AAGhBF,YAAAA,QAAQ,EAAE;AAHM;AAFN;AAFT,OAAP;;AAYF;AACE,aAAOP,KAAP;AAhDJ;AAkDD,CAnDD;;AAqDA,eAAeD,mBAAf","sourcesContent":["import uploadFileTypes from './uploadFile.types'\nimport { modifyFiles } from './uploadFile.utils'\n\nconst INITIAL_STATE = {\n  fileProgress: {\n    \n    // format will be like below\n    // 1: {\n    //   id: 1,\n    //   file,\n    //   progress: 0,\n    //   cancelSource: source,\n    //   status: 0,\n    // },\n  },\n}\n\nconst fileProgressReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case uploadFileTypes.SET_UPLOAD_FILE:\n      return {\n        ...state,\n        fileProgress: {\n          ...state.fileProgress,\n          ...modifyFiles(state.fileProgress, action.payload),\n        },\n      }\n\n    case uploadFileTypes.SET_UPLOAD_PROGRESS:\n      return {\n        ...state,\n        fileProgress: {\n          ...state.fileProgress,\n          [action.payload.id]: {\n            ...state.fileProgress[action.payload.id],\n            progress: action.payload.progress,\n          },\n        },\n      }\n\n    case uploadFileTypes.SUCCESS_UPLOAD_FILE:\n      return {\n        ...state,\n        fileProgress: {\n          ...state.fileProgress,\n          [action.payload]: {\n            ...state.fileProgress[action.payload],\n            status: 1,\n          },\n        },\n      }\n\n    case uploadFileTypes.FAILURE_UPLOAD_FILE:\n      return {\n        ...state,\n        fileProgress: {\n          ...state.fileProgress,\n          [action.payload]: {\n            ...state.fileProgress[action.payload],\n            status: 0,\n            progress: 0,\n          },\n        },\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default fileProgressReducer\n"]},"metadata":{},"sourceType":"module"}